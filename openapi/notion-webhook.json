{
  "info": {
    "contact": {
      "email": "support@example.com"
    },
    "description": "Modified to support n8n Webhook parsing. All parameters are provided at the top level.",
    "title": "Notion Custom API",
    "version": "1.0.2"
  },
  "openapi": "3.1.0",
  "paths": {
    "/appendBlockChildren": {
      "patch": {
        "description": "Append one or more blocks to an existing container block.",
        "operationId": "appendBlockChildren",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "after": {
                    "description": "ID of an existing child to insert after",
                    "type": "string"
                  },
                  "block_id": {
                    "type": "string"
                  },
                  "children": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "block_id",
                  "children"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated block info"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "summary": "Append block children",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/createDatabase": {
      "post": {
        "description": "Create a new database under a parent page.",
        "operationId": "createDatabase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "parent_page_id": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "object"
                  },
                  "title": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "parent_page_id",
                  "properties",
                  "title"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created database details"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "summary": "Create a database",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/createPage": {
      "post": {
        "operationId": "createPage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "children": {
                    "description": "Optional array of block children to include under the page",
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "database_id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "properties": {
                    "description": "Mapping of database property names to values for the new page",
                    "type": "object"
                  }
                },
                "required": [
                  "database_id",
                  "properties"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created page details"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "summary": "Create a Notion-style page in a database",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/deleteBlock": {
      "delete": {
        "description": "Move a block to the trash in Notion.",
        "operationId": "deleteBlock",
        "parameters": [
          {
            "in": "query",
            "name": "block_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletion acknowledged"
          },
          "400": {
            "description": "Invalid block_id"
          }
        },
        "summary": "Delete a block",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/getBlock": {
      "get": {
        "operationId": "getBlock",
        "parameters": [
          {
            "in": "query",
            "name": "block_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Block details"
          },
          "400": {
            "description": "Invalid block_id"
          }
        },
        "summary": "Retrieve a block by ID",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/getBlockChildren": {
      "get": {
        "operationId": "getBlockChildren",
        "parameters": [
          {
            "in": "query",
            "name": "block_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Child blocks list"
          },
          "400": {
            "description": "Invalid block_id"
          }
        },
        "summary": "Retrieve block children",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/getDB": {
      "get": {
        "operationId": "getDB",
        "parameters": [
          {
            "in": "query",
            "name": "database_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Database details"
          },
          "400": {
            "description": "Invalid database_id or structure"
          }
        },
        "summary": "Retrieve a Notion-style database by ID",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/getPage": {
      "get": {
        "operationId": "getPage",
        "parameters": [
          {
            "in": "query",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page details"
          },
          "400": {
            "description": "Invalid page_id"
          }
        },
        "summary": "Retrieve a page by ID",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/queryDB": {
      "post": {
        "operationId": "queryDB",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "database_id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "filter": {
                    "description": "Compound filter using and/or logic",
                    "example": {
                      "or": [
                        {
                          "property": "In stock",
                          "checkbox": {
                            "equals": true
                          }
                        },
                        {
                          "property": "Cost of next trip",
                          "number": {
                            "greater_than_or_equal_to": 2
                          }
                        }
                      ]
                    },
                    "properties": {
                      "and": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "checkbox": {
                        "properties": {
                          "does_not_equal": {
                            "type": "boolean"
                          },
                          "equals": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "number": {
                        "properties": {
                          "does_not_equal": {
                            "type": "number"
                          },
                          "equals": {
                            "type": "number"
                          },
                          "greater_than": {
                            "type": "number"
                          },
                          "greater_than_or_equal_to": {
                            "type": "number"
                          },
                          "less_than": {
                            "type": "number"
                          },
                          "less_than_or_equal_to": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "or": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "property": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page_size": {
                    "default": 100,
                    "maximum": 100,
                    "type": "integer"
                  },
                  "sorts": {
                    "items": {
                      "properties": {
                        "direction": {
                          "enum": [
                            "ascending",
                            "descending"
                          ],
                          "type": "string"
                        },
                        "property": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "start_cursor": {
                    "type": "string"
                  }
                },
                "required": [
                  "database_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "has_more": {
                      "type": "boolean"
                    },
                      "next_cursor": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                    "results": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Query results"
          },
          "400": {
            "description": "Invalid request or structure"
          }
        },
        "summary": "Query a Notion-style database",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/search": {
      "post": {
        "operationId": "search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "query": {
                    "type": "string"
                  }
                },
                "required": [
                  "query"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Search results"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "summary": "Search pages and databases",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/updateBlock": {
      "patch": {
        "operationId": "updateBlock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "archived": {
                    "type": "boolean"
                  },
                  "block_id": {
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "text",
                      "to_do"
                    ]
                  }
                },
                "required": [
                  "block_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated block"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "summary": "Update a block",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/updateDatabase": {
      "patch": {
        "operationId": "updateDatabase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "database_id": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "object"
                  },
                  "title": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "database_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated database"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "summary": "Update a database",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    },
    "/updatePage": {
      "patch": {
        "operationId": "updatePage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "archived": {
                    "type": "boolean"
                  },
                  "page_id": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "object"
                  }
                },
                "required": [
                  "page_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated page"
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "summary": "Update a page",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false
      }
    }
  },
  "servers": [
    {
      "description": "Main API server",
      "url": "https://n8n.qylab.kr/webhook"
    }
  ]
}
