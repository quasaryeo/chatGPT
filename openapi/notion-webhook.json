{
  "openapi": "3.1.0",
  "info": {
    "title": "Notion Custom API (Body Nested)",
    "description": "Modified to support n8n Webhook parsing. All parameters are wrapped in a 'body' object.",
    "version": "1.0.2"
  },
  "servers": [
    {
      "url": "https://qylabn8n.duckdns.org/webhook",
      "description": "Main API server"
    }
  ],
  "paths": {
    "/getDB": {
      "get": {
        "summary": "Retrieve a Notion-style database by ID",
        "operationId": "getDB",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false,
        "parameters": [
          {
            "name": "database_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Database details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "description": "Database property schema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid database_id or structure"
          }
        }
      }
    },
    "/queryDB": {
      "post": {
        "summary": "Query a Notion-style database (nested under 'body')",
        "operationId": "queryDB",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["database_id", "body"],
                "properties": {
                  "database_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "object",
                        "description": "Compound filter using and/or logic"
                      },
                      "sorts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "property": {
                              "type": "string"
                            },
                            "direction": {
                              "type": "string",
                              "enum": ["ascending", "descending"]
                            }
                          }
                        }
                      },
                      "page_size": {
                        "type": "integer",
                        "default": 100,
                        "maximum": 100
                      },
                      "start_cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "next_cursor": {
                      "type": [
                        "string",
                        "null"
                      ]
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or structure"
          }
        }
      }
    },
    "/createPage": {
      "post": {
        "summary": "Create a Notion-style page in a database (nested under 'body')",
        "operationId": "createPage",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["database_id", "body"],
                "properties": {
                  "database_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "body": {
                    "type": "object",
                    "required": ["properties"],
                    "properties": {
                      "properties": {
                        "type": "object",
                        "description": "Mapping of database property names to values for the new page"
                      },
                      "children": {
                        "type": "array",
                        "description": "Optional array of block children to include under the page",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created page details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_id": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "description": "Properties of the newly created page"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or structure"
          }
        }
      }
    },
    "/appendBlock": {
      "post": {
        "summary": "Append child blocks to an existing block (nested under 'body')",
        "operationId": "appendBlock",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["block_id", "body"],
                "properties": {
                  "block_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "body": {
                    "type": "object",
                    "required": ["children"],
                    "properties": {
                      "children": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Child blocks appended",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or structure"
          }
        }
      }
    },
    "/getBlock": {
      "get": {
        "summary": "Retrieve a Notion-style block by ID",
        "operationId": "getBlock",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false,
        "parameters": [
          {
            "name": "block_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Block details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or structure"
          }
        }
      }
    },
    "/searchObjects": {
      "post": {
        "summary": "Search across pages and blocks (nested under 'body')",
        "operationId": "searchObjects",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["body"],
                "properties": {
                  "body": {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "object"
                      },
                      "query": {
                        "type": "string"
                      },
                      "sort": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or structure"
          }
        }
      }
    },
    "/updateBlock": {
      "post": {
        "summary": "Update a Notion-style block (nested under 'body')",
        "operationId": "updateBlock",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["block_id", "body"],
                "properties": {
                  "block_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "body": {
                    "type": "object",
                    "description": "Fields to update on the block"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated block details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or structure"
          }
        }
      }
    },
    "/uploadFile": {
      "post": {
        "summary": "Upload a file and attach it to a page (nested under 'body')",
        "operationId": "uploadFile",
        "x-openai-isConsequential": false,
        "x-openai-requiresUserConfirmation": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["page_id", "body"],
                "properties": {
                  "page_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "body": {
                    "type": "object",
                    "required": ["name", "url"],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or structure"
          }
        }
      }
    }
  }
}
